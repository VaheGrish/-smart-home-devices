service: smart-home-device-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: provided.al2
  region: us-east-1
  memorySize: 128
  timeout: 10

  environment:
    DEVICES_TABLE: DevicesTable
    DEVICE_QUEUE_URL:
      Ref: DeviceQueue


package:
  individually: true
  exclude:
    - "**"

functions:
  create:
    handler: bootstrap
    package:
      artifact: build/create.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource:
          Fn::GetAtt: [DevicesTable, Arn]
      - ${file(./serverless.iam.logs.yml):LogAccess}

  get:
    handler: bootstrap
    package:
      artifact: build/get.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource:
          Fn::GetAtt: [DevicesTable, Arn]
      - ${file(./serverless.iam.logs.yml):LogAccess}

  update:
    handler: bootstrap
    package:
      artifact: build/update.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource:
          Fn::GetAtt: [DevicesTable, Arn]
      - ${file(./serverless.iam.logs.yml):LogAccess}

  delete:
    handler: bootstrap
    package:
      artifact: build/delete.zip
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource:
          Fn::GetAtt: [DevicesTable, Arn]
      - ${file(./serverless.iam.logs.yml):LogAccess}

  sqs:
    handler: bootstrap
    package:
      artifact: build/sqs.zip
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - DeviceQueue
              - Arn
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource:
          Fn::GetAtt: [DevicesTable, Arn]
      - Effect: Allow
        Action:
          - sqs:ReceiveMessage
          - sqs:DeleteMessage
          - sqs:GetQueueAttributes
        Resource:
          Fn::GetAtt: [DeviceQueue, Arn]
      - ${file(./serverless.iam.logs.yml):LogAccess}

resources:
  Resources:
    DevicesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: DevicesTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    DeviceQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: DeviceAssociationQueue
